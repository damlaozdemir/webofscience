(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> range() integer end argument expected, got list."
p3
sS'layer'
p4
S'/home/damla/web2py/applications/webofsciencenew/controllers/default.py'
p5
sS'code'
p6
S'from urllib2 import *\nimport urllib\n\ndef index():\n\n    session.keyword = str(request.vars.inputkeyword)\n    f = { \'q\' : session.keyword}\n\n    connection = urlopen(\'http://localhost:8983/solr/webofscienceindex/select?\'+urllib.urlencode(f)+\'&rows=20000&wt=json&indent=true&facet=true&facet.field=authors&facet.field=published&facet.mincount=1&facet.limit=20000\')\n    response = eval(connection.read())\n\n    articles = response[\'response\'][\'docs\']\n    facet = response[\'facet_counts\'][\'facet_fields\']\n    \n    authorArticles =[]\n    totalArticles = []\n    facetList =[]\n    for f in facet[\'authors\']:\n        if(facet[\'authors\'].index(f) %2 == 0):\n            authorArticles.append(f)\n        else:\n            totalArticles.append(f)\n    facetList.append(authorArticles)\n    facetList.append(totalArticles)\n    length = len(facetList[0])\n\n    \n\n\n    return dict(keyword =session.keyword, facetList=facetList, length = length,  articles=articles)\n\ndef author():\n\n    keyword2 = session.keyword\n\n    authorrequest = request.args[1]\n    authorname = authorrequest.replace(\'__\', \', \')\n    athname = session.authorname\n    cot = ("\\"","\\"")\n    authorname = authorname.join(cot)\n\n    f = { \'q\' : keyword2, \'fq\' : "authors:"+authorname}\n    urlname = urllib.urlencode(f)\n    connection = urlopen(\'http://localhost:8983/solr/webofscienceindex/select?\'+urllib.urlencode(f)+\'&rows=200000&wt=json&indent=true&facet=true&facet.field=authors&facet.field=published&facet.mincount=1&facet.limit=100\')\n    response = eval(connection.read())\n    matches = response[\'response\'][\'numFound\']\n    articles = response[\'response\'][\'docs\']\n    facet = response[\'facet_counts\'][\'facet_fields\']\n    #articles = sorted(articles, key=lambda k: k [\'published\'][0], reverse= True)\n    articlesList = []\n    puclisheddates = []\n    for a in articles:\n        article = {}\n        #p = a[\'published\'][0]\n        #new[\'published\'] = p\n        #article[\'authors\'] = a[0][0]\n        article[\'title\'] = a[\'title\'][0]\n        #article[\'abstract\'] = a[2][0]\n        #article[\'keywords\'] = a[\'keywords\'][0]\n        #article[\'address\'] = a[\'revisedAddress\'][0]\n        #dates.append(d)\n        articlesList.append(article)\n    #dates = list(set(dates)) # coklu degerleri uniqe yapar\n    length = len(articlesList[0])\n\n    years =[]\n    numofpub = []\n    facetListyears =[]\n    facetList =[]\n    for f in facet[\'published\']:\n        if(facet[\'published\'].index(f) %2 == 0):\n            years.append(f[-4:])\n        else:\n            numofpub.append(f)\n    facetListyears.append(years)\n    facetListyears.append(numofpub)\n    #lengthofyears = len(facetList[0])\n    mydict = {}\n    for i in range(facetListyears[0]):\n        mydict[facetListyears[0][i]] = facetListyears[1][i]\n    print mydict\n    \n    return dict(articlesList = articlesList, articles=articles, keyword =keyword2, matches=matches,urlname=urlname,authorname=authorname,length=length, athname=athname ,facetListyears=facetListyears)\n\nresponse._vars=response._caller(author)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/damla/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/home/damla/web2py/applications/webofsciencenew/controllers/default.py", line 85, in <module>\n  File "/home/damla/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/damla/web2py/applications/webofsciencenew/controllers/default.py", line 79, in author\n    for i in range(facetListyears[0]):\nTypeError: range() integer end argument expected, got list.\n'
p11
s.